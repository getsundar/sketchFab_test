<html>

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Structural Defect Reporting</title>
	<!-- Insert this script -->
	<script type="text/javascript" src="https://static.sketchfab.com/api/sketchfab-viewer-1.3.1.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" crossorigin="anonymous"></script>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
	<style>
		body{
			user-select: none;
    background: black;
    font-family:-apple-system,system-ui,"Segoe UI",Roboto,sans-serif;
    }
	a:hover {
		text-decoration:none;
	}
	a:focus{
		text-decoration:none;
	}
    .structural-head{
    background: #0da6e0;
    }
    .structural-head a, .model-specific label{
    color: #fff;
    font-weight: 100;
    }
    .navbar-nav.structural-h2{
    float:none;
    }
    .structural-h2 li{
    width: 13%;
    }
    .structural-h2 li a{
    color:#00a1de;
    }
    .brand{
    height: 42px;
    width: 100px;
    background-size: 89%;
    background-repeat: no-repeat;
    background-position: 13px 4px;)
    }
	.nav-sdm{
	background: #0da6e0;
	border-radius: 6px;
	padding: 8px;
	}
	
	.nav-sdm a.navbar-brand strong, {
	color:#ffff;
	font-weight: 100;
	}
	.card, #annoName, #annoDescr{
    border-color: #00a1de;
	color: #828180;
	}
	.btn.disabled, .btn:disabled {
	opacity: .65;
	color: #fff;
	background-color: #e77b2f;
	box-shadow: 0 0 2px 0 rgba(0, 0, 0, 0.12);
	border: solid 1px #e77b2f;
	}
	h1.flight-details{
	color:#fff;
	font-size: 40px;
	}
	row .pt-3{
	padding-top: 3% !important;
	}
	h3{
	font-weight: 300;
	}
	.g-legal-footer{
    margin-top: 1px;
    background-color: #FFF;
    padding: 10px 0;
    text-align: center;
	}
	
	.pad-border{
	border-right: 1px solid #eaeaea;
    padding-right: 18px;
	}
	iframe{
	border: none;
	width:100%;
	}
	#markAnno{
	position: absolute;
    right: 3%;
    bottom: 11%;
    width: 10%;
    color: #ffff;
    background-color: #e77b2f;
    box-shadow: 0 0 2px 0 rgba(0, 0, 0, 0.12);
    border: solid 1px #e77b2f;;
	}
	#loadModel{
	color: #ffff;
    background-color: #e77b2f;
    box-shadow: 0 0 2px 0 rgba(0, 0, 0, 0.12);
    border: solid 1px #e77b2f;
    border-radius: 4px;
    padding: 7px;
	font-size: 14px;
	}
	.mt-10{
	margin-top:10px;
	}
	.mt-25{
	margin-top: 25px;
	}
	.mt-0{
	margin-top:0px;
	}
	.mb-0{
	margin-bottom:0px;
	}
	.btn-klm{
	width: 20%;
    color: #ffff;
    background-color: #e77b2f;
    box-shadow: 0 0 2px 0 rgba(0, 0, 0, 0.12);
    border: solid 1px #e77b2f;
    border-radius: 4px;
    padding: 2%;
	}
	.head-sdr{   
	padding-top: 15px;
    padding-bottom: 15px;
    line-height: 28px;
    position: relative;
    display: block;
    padding: 10px 15px;
    color: #ffff;
	}
	.black,.panel-heading.black{
	background-color: black;
	color: #fff;
	border-color: #928181;
	}
	.gly-sdr{
	height: 50px;
    width: 50px;
    border: 3px solid #e77b2f;
    border-radius: 50%;
    margin-top: 10px;
	}
	.gly-sdr span {
	top: 17%;
    left: 19%;
    color: white;
    font-size: 28px;
	}
	.border-all{
	border: 1px solid #ffff;
	}
	#accordion .form-control{
	height:25px;
	}
	
	.txt-upload{
    right: 56%;
    padding: 4px 12px;
    font-size: 14px;
    line-height: 1.42857143;
    color: #555;
    background-color: #fff;
    background-image: none;
    border: 1px solid #ccc;
    border-radius: 4px;
    width: 90%;
	}
	.custom-file-upload{
    left: 9%;
    bottom: 31px;
    padding: 5px;
    border-radius: 5px;
    text-align: center;
    width: 47%;
    color: #ffff;
    background-color: #e77b2f;
    box-shadow: 0 0 2px 0 rgba(0, 0, 0, 0.12);
    border: solid 1px #e77b2f;
	}
	input[type=file] {
    display: none;
	}
	#accordion .form-control.damage-des, textarea{
	height:auto;
	}
	@media screen and (max-width: 600px) {
	  .structural-head div ul:nth-of-type(2){
	  	display: none;
	  }
	  .structural-head div ul li{
	  	float: left;
	  }
	  .structural-head div ul li:nth-of-type(1){
	  	margin-left: 16%;
	  }
	  .structural-head div ul li:nth-of-type(2){
	  	font-size: 22px;
	  }
	  nav.navbar.panel{
	  	display:none;
	  }
	  .uploads
	  {
	   	margin-left: 45%;
   	   	margin-top: 16%;
  	  }
	}
	</style>
</head>

<body>


	<!-- Main navigation -->
	
	
	{{!-- <div class="view" style="background-image: url('https://mdbootstrap.com/img/Photos/Others/images/31.jpg'); background-repeat: no-repeat; background-size: cover; background-position: center center;">
		<!-- Mask & flexbox options--> --}}
		<div class=" klmbackground-img">
			<!-- Content -->
			<div class="container">
				<!--Grid row-->
				<div class="row mt-lg-5">
					<!--Grid column-->
					<div class="col-md-9" data-wow-delay="0.3s">
						<h6 class="mb-3 iframe-height">
							<iframe src="" id="api-frame" height="500" width="500"></iframe>
						</h6>
						<button class="btn" id="markAnno">Mark</button>
					</div>
					<!--Grid column-->
					<!--Grid column-->
				</div>
			</div>
		</div>
	</div>
	<!-- Full Page Intro -->
	<!-- Main navigation -->

	<!-- Initialize the viewer -->
	<script type="text/javascript">
		var annolist = [];
		var modelsList = [];
		var addDefectMode = false;
		currentAnnotationToCreate = {};
		markDefectMode = false;
		cameraX = 0;
		cameraY = 0;
		cameraZ = 0;
		targetX = 0;
		targetY = 0;
		targetZ = 0;
		positionX = 0;
		positionY = 0;
		positionZ = 0;
		normalX = 0;
		normalY = 0;
		normalZ = 0;
		currentDefectId = 1;
		var currentAircraftmodelSelected;
		var currentAirlineSelected;
		var currentRegistrationCodeSelected;
		var cameraPosition;
		var cameraTarget;
		var currentDefectToUpdate;
		var currentAnnotationToUpdate;
		var sketchFabAPI;
		var iframe = document.getElementById('api-frame');
		var urlid = 'dbf6450b82a4461c9393dda70fb66a43';
		// By default, the latest version of the viewer API will be used.
		var client = new Sketchfab(iframe);

		// Controls
		document.getElementById('markAnno').addEventListener('click', function () {
			markDefectMode = true;
		});
		// document.getElementById('loadModel').addEventListener('click', function () {
		// 	onLoadmodel();
		// });
		// $('#loadAnno').click(function () {
		// 	init();
		// });
		// API
		function onSuccess(api) {
			sketchFabAPI = api;
			api.addEventListener('annotationSelect', function (index) {
				if (index != -1) {
					api.getAnnotation(index, function (err, info) {
						if (info) {
							currentAnnotationToUpdate = info;
							currentDefectToUpdate = getAnnotationDetails((info.order));
							//setFormDetails(currentDefectToUpdate);
						}
					});
				}
			});
			api.addEventListener('click', function (info) {
				if (info.position2D !== null && markDefectMode) {
					markDefectMode = false;
					positionX = info.position3D[0];
					positionY = info.position3D[1];
					positionZ = info.position3D[2];
					normalX = info.normal[0];
					normalY = info.normal[1];
					normalZ = info.normal[2];
					api.getCameraLookAt(function (err, camera) {
						cameraPosition = camera.position;
						cameraTarget = camera.target;
						// document.getElementById('saveAnno').disabled = false;
						// document.getElementById('annoRes').style.display = "hidden";
						currentAnnotationToCreate = {
							pox: positionX,
							poy: positionY,
							poz: positionZ,
							nox: normalX,
							noy: normalY,
							noz: normalZ,
							camPos: cameraPosition,
							camTarget: cameraTarget,
							title: currentDefectId++,
							content: 'Defect Description',
							date: '',
							classification: '',
							damagedComponent: '',
							mobileElement: '',
							locationSide: '',
							damageType: '',
							reference: '',
							reportedBy: '',
							status: '',
							owner: '',
							references: '',
							repairTypeText: ''
						};
						var modelDetails;
						api.createAnnotation(
							[currentAnnotationToCreate.pox, currentAnnotationToCreate.poy, currentAnnotationToCreate.poz],
							[currentAnnotationToCreate.nox, currentAnnotationToCreate.noy, currentAnnotationToCreate.noz],
							currentAnnotationToCreate.camPos,
							currentAnnotationToCreate.camTarget,
							currentAnnotationToCreate.title,
							currentAnnotationToCreate.content,
							function (err, index) {
								currentAnnotationToUpdate = currentAnnotationToCreate;
								var copiedObject = jQuery.extend(true, {}, currentAnnotationToCreate)
								checkForModel(copiedObject);
							}
						);
					});
				}
			}, {
				pick: 'fast'
			});
			api.start(function () {
				console.log('started');
				api.addEventListener('viewerready', function () {
					getModelsDetails();
					var currentModel = modelsList.filter(obj => {
						return (obj.aircraftmodel === currentAircraftmodelSelected && obj.airline === currentAirlineSelected &&
							obj.registrationCode === currentRegistrationCodeSelected)
					});
					api.removeAnnotation(0);
					currentModel[0].defectsDetails.forEach(function (obj) {
						if (obj.order !== 0) {
							api.createAnnotation(
								[obj.pox, obj.poy, obj.poz],
								[obj.nox, obj.noy, obj.noz],
								obj.camPos,
								obj.camTarget,
								obj.title,
								obj.content,
								function (index) {
									// console.log('added hotspot: ' + index);
									// api.removeAnnotation(index);
								}
							);
						} else {
							api.updateAnnotation(0, {
								title: obj.title,
								content: obj.content
							});
						}
					});
				});
			});
		};
		// Methods
		function getAnnotationDetails(index) {
			var currentModel = modelsList.filter(obj => {
				return (obj.aircraftmodel === currentAircraftmodelSelected && obj.airline === currentAirlineSelected && obj.registrationCode ===
					currentRegistrationCodeSelected)
			});
			return currentModel[0].defectsDetails[index];
		}

		function checkForModel(annotationToAdd) {
			var currentModel = modelsList.filter(obj => {
				return (obj.aircraftmodel === currentAircraftmodelSelected && obj.airline === currentAirlineSelected && obj.registrationCode ===
					currentRegistrationCodeSelected)
			});
			if (currentModel.length === 0) {
				modelDetails = {
					aircraftmodel: currentAircraftmodelSelected,
					airline: currentAirlineSelected,
					registrationCode: currentRegistrationCodeSelected,
					defectsDetails: [annotationToAdd]
				};
				currentDefectToUpdate = modelDetails;
				modelsList.push(modelDetails);
			} else {
				currentDefectToUpdate = currentModel[0];
				currentModel[0].defectsDetails.push(annotationToAdd);
			}
		};

		function onLoadmodel() {
			clearForm();
			getModelsDetails();
			document.getElementById('api-frame').src += '';
			client = new Sketchfab(document.getElementById('api-frame'));
			//document.getElementById('api-frame').contentWindow.location.reload();
			client.init(urlid, {
				success: onSuccess,
				error: onError,
				annotation: 0,
				annotations_visible: 1,
				ui_controls: 0

			});
		};

		function onError(error) {
			console.log(error);
		};

		function init() {
			client.init(urlid, {
				success: onSuccess,
				error: onError,
				annotation: 0,
				annotations_visible: 1,
				ui_controls: 0

			});
		};
		init();
	</script>

</body>

</html>